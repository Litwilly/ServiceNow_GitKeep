<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_80927_git_keep.GitWSHelper</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>GitWSHelper</name>
        <script><![CDATA[var GitWSHelper = Class.create();
GitWSHelper.prototype = {
	initialize: function() {
		this.GHUSER = gs.getProperty("x_80927_git_keep.ghuser");
		this.GHPWD = gs.getProperty("x_80927_git_keep.ghpwd");
		this.GHREPO = gs.getProperty("x_80927_git_keep.ghrepo");
	},
	
	// Get the SHA for a specific file. If the file doesn't exist, return false
	_getSHA: function(fileName) {
		var restMessage = new sn_ws.RESTMessageV2();
		restMessage.setBasicAuth(this.GHUSER, this.GHPWD);
		restMessage.setHttpMethod("get");
		restMessage.setEndpoint("https://api.github.com/repos/" + this.GHREPO + "/contents/" + fileName);
		var response = restMessage.execute();
		var body = response.getBody();
		var parser = new global.JSON();
		var bodyObj = parser.decode(body);
		if (gs.nil(bodyObj.sha)){
			return false;
		}
		else{
			return bodyObj.sha;
		}
	},
	
	// Upload a file to GitHub
	uploadFile: function(fileName, fileContents, fileDescription){
		var sha = this._getSHA(fileName);
		var restMessage = new sn_ws.RESTMessageV2();
		restMessage.setBasicAuth(this.GHUSER, this.GHPWD);
		restMessage.setHttpMethod("put");
		restMessage.setEndpoint("https://api.github.com/repos/" + this.GHREPO + "/contents/" + fileName);
		//var util = new GlideStringUtil();
		var encodedContents = gs.base64Encode(fileContents);
		// Note we are building the request body as a string, as setStringParameter seems to run into issues with the GitHub REST API
		var reqBody = "\"path\" : \"" + fileName + "\", \"message\" : \""+fileDescription+"\", \"content\" : \"" + encodedContents + "\"";
		if (sha) reqBody += ", \"sha\" : \"" + sha +"\"";
		restMessage.setRequestBody("{" + reqBody + "}");
		var response = restMessage.execute();
		var body = response.getBody();
		//var parser = new global.JSON();
		var parser = new global.JSON();
		var bodyObj = parser.decode(body);
		if (gs.nil(bodyObj.content.sha)){
			return false;
		}
		else{
			return bodyObj.content.sha;
		}
	},
	
	type: 'GitWSHelper'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-09-11 18:51:48</sys_created_on>
        <sys_id>7c86cfa4db60230027e40d53ca9619b2</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>GitWSHelper</sys_name>
        <sys_package display_value="Git Keep" source="x_80927_git_keep">ee4f76a0db60230027e40d53ca96194e</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Git Keep">ee4f76a0db60230027e40d53ca96194e</sys_scope>
        <sys_update_name>sys_script_include_7c86cfa4db60230027e40d53ca9619b2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-09-13 00:31:16</sys_updated_on>
    </sys_script_include>
</record_update>
